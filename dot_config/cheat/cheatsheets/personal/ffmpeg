#convert webm to mp3
for f in *.webm; do ffmpeg -i "$f" -vn "${f%.webm}.mp3"; done

# To print file metadata:
ffmpeg -i <file>

# To convert all m4a files to mp3
for f in *.m4a; do ffmpeg -i "$f" -acodec libmp3lame -vn -b:a 320k "${f%.m4a}.mp3"; done

# To convert video from .foo to .bar
# -g : GOP, for searchability
ffmpeg -i input.foo -vcodec bar -acodec baz -b:v 21000k -b:a 320k -g 150 -threads 4 output.bar

# To convert image sequence to video:
ffmpeg -r 18 -pattern_type glob -i '*.png' -b:v 21000k -s hd1080 -vcodec vp9 -an -pix_fmt yuv420p -deinterlace output.ext

# To combine video and audio into one file
ffmpeg -i video.ext -i audio.ext -c:v copy -c:a copy output.ext

# To add ass subtitle to the video
ffmpeg -i input_video.mp4 -vf ass=sub.ass output_video_subtitles.mp4

# To convert webm to mp4
ffmpeg -i input_video.webm output_video.mp4

# To convert mp4 to mov
ffmpeg -i input_video.mp4 -acodec copy -vcodec copy -f mov output_video.mov

# To convert mov to mp4
ffmpeg -i input_video.mov -vcodec copy -acodec copy output_video.mp4

# Listen to 10 seconds of audio from a video file
#
# -ss : start time
# -t  : seconds to cut
# -autoexit : closes ffplay as soon as the audio finishes
ffmpeg -ss 00:34:24.85 -t 10 -i path/to/file.mp4 -f mp3 pipe:play | ffplay -i pipe:play -autoexit

# To combine audio and video from N files:
# See also https://stackoverflow.com/questions/7333232/how-to-concatenate-two-mp4-files-using-ffmpeg
cat mylist.txt
file '/path/to/file1'
file '/path/to/file2'
file '/path/to/file3'
    
ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.mp4

##command library
Extract the sound from a video and save it as MP3
$ ffmpeg -i [video.mp4] -vn [sound].mp3


Save a video as GIF, scaling the height to 1000px and setting framerate to 15
$ ffmpeg -i [video.mp4] -vf 'scale=-1:[1000]' -r [15] [output.gif]


Combine numbered images (frame_1.jpg, frame_2.jpg, etc) into a video or GIF
$ ffmpeg -i [frame_%d.jpg] -f image2 [video.mpg|video.gif]


Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image
$ ffmpeg -ss [mm:ss] -i [video.mp4] -frames 1 -s [128x128] -f image2 [image.png]


Trim a video from a given start time mm:ss to an end time mm2:ss2 (omit the -to flag to trim till the end)
$ ffmpeg -ss [mm:ss] -to [mm2:ss2] -i [video.mp4] -codec copy [output.mp4]


Convert AVI video to MP4. AAC Audio @ 128kbit, h264 Video @ CRF 23
$ ffmpeg -i [input_video].avi -codec:audio aac -b:audio 128k -codec:video libx264 -crf 23 [output_video].mp4


Remux MKV video to MP4 without re-encoding audio or video streams
$ ffmpeg -i [input_video].mkv -codec copy [output_video].mp4


Convert MP4 video to VP9 codec. For the best quality, use a CRF value (recommended range 15-35) and -b:video MUST be 0
$ ffmpeg -i [input_video].mp4 -codec:video libvpx-vp9 -crf [30] -b:video 0 -codec:audio libopus -vbr on -threads [number_of_threads] [output_video].webm
